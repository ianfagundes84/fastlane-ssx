trigger:
- main

pool:
  vmImage: 'macOS-latest'

variables:
  scheme: 'WhiteLabel'
  distributionMethod: 'development'
  xcodeProjectPath: '$(Build.SourcesDirectory)/WhiteLabel.xcodeproj'

steps:
- checkout: self

- script: ls -R $(Build.SourcesDirectory)
  displayName: 'Print directory structure'

- task: CocoaPods@0
  inputs:
    workingDirectory: $(Build.SourcesDirectory)/MyProject 
    forceRepoUpdate: true
  displayName: 'CocoaPods install'

- task: Bash@3
  displayName: 'Check for Ruby'
  inputs:
    targetType: 'inline'
    script: |
      if ! command -v ruby &> /dev/null; then
          echo "Ruby could not be found. Install Ruby before running this pipeline."
          exit 1
      fi

- task: Bash@3
  displayName: 'Install Bundler'
  inputs:
    targetType: 'inline'
    script: |
      sudo gem install bundler:2.2.27
      if [ $? -ne 0 ]; then
          echo "Bundler installation failed."
          exit 1
      fi

- task: Bash@3
  displayName: 'Configure and Install Bundle'
  inputs:
    targetType: 'inline'
    script: |
      bundle config path vendor/bundle
      bundle install --jobs 4 --retry 3
      if [ $? -ne 0 ]; then
          echo "Bundle installation failed."
          exit 1
      fi

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'Certificate.p12'
    keychain: '$(P12_PASSWORD)'
  displayName: Install Apple Certificate
  
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: '$(System.DefaultWorkingDirectory)/_temp'
    provProfileSecureFile: 'Development_br.com.systemsat.whitelabelssx.mobileprovision'
  displayName: 'Install Apple Provisioning Profile'

- task: Xcode@5
  inputs:
    actions: 'clean build'
    xcWorkspacePath: '**/*.xcworkspace' 
    scheme: $(scheme)
    sdk: 'iphoneos'
    configuration: 'Release'
    xcodeVersion: 'default' 

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop'
    publishLocation: 'Container'