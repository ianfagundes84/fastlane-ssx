trigger:
- develop

pool:
  vmImage: 'macOS-latest'

variables:
  scheme: 'WhiteLabel'
  distributionMethod: 'development'
  xcWorkspacePath: '$(Build.SourcesDirectory)/WhiteLabel.xcworkspace'

steps:
- checkout: self

- script: ls -R $(Build.SourcesDirectory)
  displayName: 'Print directory structure'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'CertificateAzure.p12'
    certPwd: '$(P12_PASSWORD)'
    keychain: 'temp'
  
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'match Development br.com.systemsat.whitelabelssx.mobileprovision'
  displayName: 'Install Apple Provisioning Profile'

- script: |
    cd $(Build.SourcesDirectory)
    sudo gem install cocoapods
    pod update
    pod install
  displayName: 'CocoaPods install'

- script: |
    rm -rf ~/Library/Developer/Xcode/DerivedData/
  displayName: 'Clean Derived Data'

- script: |
    export CODE_SIGN_IDENTITY="${CODE_SIGN_IDENTITY}"
  displayName: 'Set Code Sign Identity'

- script: |
    echo 'Clean build folder'
    xcodebuild clean
  displayName: 'Clean Build Folder'

#For debug proposal
- script: echo $(xcWorkspacePath)
  displayName: 'Print xcWorkspacePath'
  
- script: ls -la $(Build.SourcesDirectory)
  displayName: 'List files in source directory'

- script: xcodebuild -list -workspace $(xcWorkspacePath)
  displayName: 'List Available Schemes'
  
- task: Xcode@5
  inputs:
    actions: 'clean build'
    xcWorkspacePath: '$(xcWorkspacePath)'
    scheme: '$(scheme)'
    sdk: 'iphoneos'
    configuration: 'Release'
    xcodeVersion: 'default' 
    signingOption: 'manual'
    signingIdentity: '$(CODE_SIGN_IDENTITY)'
    provisioningProfileUUID: '$(APPLE_PROV_PROFILE_UUID)'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop'
    publishLocation: 'Container'
