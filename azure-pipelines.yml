trigger:
- develop

pool:
  vmImage: 'macOS-latest'

variables:
  scheme: 'WhiteLabel'
  xcWorkspacePath: '$(Build.SourcesDirectory)/WhiteLabel.xcworkspace'
  infoPlistPath: '$(Build.SourcesDirectory)/WhiteLabel/Info.plist'

steps:
- checkout: self

- script: ls -R $(Build.SourcesDirectory)
  displayName: 'Print directory structure'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'CertificatesDistribution.p12'
    certPwd: '$(P12_PASSWORD)'
    keychain: 'temp'
  
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'DistributionWhiteLabel.mobileprovision'
  displayName: 'Install Apple Provisioning Profile'

- script: |
    cd $(Build.SourcesDirectory)
    pod update
    pod install
  displayName: 'CocoaPods install'

- script: rm -rf ~/Library/Developer/Xcode/DerivedData/
  displayName: 'Clean Derived Data'

- script: echo 'Clean build folder' && xcodebuild clean
  displayName: 'Clean Build Folder'

# Debugging Steps (Init)
- script: echo $(xcWorkspacePath)
  displayName: 'Print xcWorkspacePath'
  
- script: ls -la $(Build.SourcesDirectory)
  displayName: 'List files in source directory'

- script: xcodebuild -list -workspace $(xcWorkspacePath)
  displayName: 'List Available Schemes'
  
- script: |
    security find-identity -v -p codesigning
  displayName: 'List installed certificates'

- script: find $(Build.SourcesDirectory) -name 'Info.plist'
  displayName: 'Find all Info.plist files'

# Check and Modify Permissions
- script: ls -l $(infoPlistPath)
  displayName: 'Check Info.plist permissions'
  
- script: chmod 644 $(infoPlistPath)
  displayName: 'Change Info.plist permissions'

# Debug: Display Info.plist Before Update
- script: cat $(infoPlistPath)
  displayName: 'Debug: Display Info.plist Before Update'

# Increment Version
- script: |
    echo "Fetching current version using PlistBuddy..."
    current_version=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" $(infoPlistPath))
    
    echo "Extracted Current Version: $current_version"
    
    if [ -z "$current_version" ]; then
      echo "CFBundleVersion not found in $(infoPlistPath). Exiting."
      exit 1
    else
      echo "Incrementing version..."
      new_version=$((current_version + 1))
      echo "New Version to be set: $new_version"
      
      echo "Setting new version using PlistBuddy..."
      /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $new_version" $(infoPlistPath)
      if [ $? -eq 0 ]; then
          echo "Version set successfully."
      else
          echo "Error setting version."
          exit 1
      fi
      
      # After setting, fetch again to verify
      updated_version=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" $(infoPlistPath))
      echo "Updated Version in Info.plist: $updated_version"
    fi
  displayName: 'Increment CFBundleVersion by 1 with Debugging'

# Debugging Steps (End)

# Debug: Display Info.plist After Update
- script: cat $(infoPlistPath)
  displayName: 'Debug: Display Info.plist After Update'

- task: Xcode@5
  inputs:
    actions: 'clean build'
    xcWorkspacePath: '$(xcWorkspacePath)'
    scheme: '$(scheme)'
    sdk: 'iphoneos'
    configuration: 'Release'
    useXcpretty: false
    signingOption: 'manual'
    exportOptions: plist
    signingIdentity: '$(CODE_SIGN_IDENTITY)'
    provisioningProfileUUID: '$(APPLE_PROV_PROFILE_UUID)'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'drop'

# Debugging Steps (Init)
- script: ls -R $(Build.SourcesDirectory)/
  displayName: 'Debug: List files in specified directory'

- script: ls -R $(Build.ArtifactStagingDirectory)/
  displayName: 'Debug: List all files from Artifact Staging Directory'
# Debugging Steps (End)

- script: |
    xcodebuild archive -workspace $(xcWorkspacePath) -scheme $(scheme) \
    -archivePath $(Build.SourcesDirectory)/build/WhiteLabel.xcarchive
  displayName: 'Archive Project'

# - script: |
#     /usr/libexec/PlistBuddy -c "Print CFBundleVersion" $(Build.SourcesDirectory)/build/WhiteLabel.xcarchive/Info.plist
#   displayName: 'Debug: Display CFBundleVersion from xcarchive'

# Archive and export .ipa
- script: |
    xcodebuild -exportArchive -archivePath $(Build.SourcesDirectory)/build/WhiteLabel.xcarchive \
    -exportOptionsPlist $(Build.SourcesDirectory)/ExportOptions.plist \
    -exportPath $(Build.ArtifactStagingDirectory)
  displayName: 'Archive and export .ipa'

- script: |
    echo "Unzipping IPA..."
    unzip $(Build.ArtifactStagingDirectory)/WhiteLabel.ipa -d extracted

    infoPlistPath= "extracted/Payload/WhiteLabel.app/Info.plist"

    echo "Updating CFBundleVersion..."
    current_version=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" $(infoPlistPath))
    echo "Extracted Current Version: $current_version"
    new_version=$((current_version + 1))
    echo "Extracted New Version: $new_version"

    /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $new_version" $(infoPlistPath)

    echo "Repackaging IPA..."
    cd extracted
    zip -qr ../WhiteLabel.ipa Payload
  displayName: 'Change CFBundleVersion in IPA'

- script: |
    xcrun altool --upload-app -f "$(Build.ArtifactStagingDirectory)/WhiteLabel.ipa" \
    -t ios -u '$(APPLE_DEVELOPER_USERNAME)' -p '$(APPLE_DEVELOPER_PASSWORD)'
  displayName: 'Upload to TestFlight'

