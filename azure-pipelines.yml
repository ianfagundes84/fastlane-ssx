trigger:
- develop

pool:
  vmImage: 'macOS-latest'

variables:
  scheme: 'WhiteLabel'
  xcWorkspacePath: '$(Build.SourcesDirectory)/WhiteLabel.xcworkspace'
  infoPlistPath: '$(Build.SourcesDirectory)/WhiteLabel/Info.plist'
  IPA_NAME: 'WhiteLabel.ipa'
  APP_VERSION: '14'

steps:
- checkout: self

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'CertificatesDistribution.p12'
    certPwd: '$(P12_PASSWORD)'
    keychain: 'temp'
  
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'DistributionWhiteLabel.mobileprovision'
  displayName: 'Install Apple Provisioning Profile'

- script: |
    cd $(Build.SourcesDirectory)
    pod update
    pod install
  displayName: 'CocoaPods install'

- script: |
    rm -rf ~/Library/Developer/Xcode/DerivedData/
    xcodebuild clean
  displayName: 'Clean Xcode data'

- script: |
    chmod 644 $(infoPlistPath)
    /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $(BUNDLE_ID)" $(infoPlistPath)
  displayName: 'Set Permissions & Bundle ID in Info.plist'

- script: |
    current_version=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" $(infoPlistPath))
    echo "Current Bundle Version BEFORE update: $current_version"
  displayName: 'Print Current CFBundleVersion'

- script: |
    new_version=$((APP_VERSION + 1))
    /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $new_version" $(infoPlistPath)
    echo "Set Bundle Version to: $new_version"
  displayName: 'Increment Version and Set CFBundleVersion'

- script: |
    updated_version=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" $(infoPlistPath))
    echo "Current Bundle Version AFTER update: $updated_version"
  displayName: 'Print Updated CFBundleVersion'

- script: |
    xcodebuild clean build \
    -workspace "$(xcWorkspacePath)" \
    -scheme "$(scheme)" \
    -sdk iphoneos \
    -configuration Release \
    -destination 'platform=iOS Simulator,name=iPhone 11 Pro' \
    CODE_SIGN_STYLE=Manual \
    CODE_SIGN_IDENTITY="$(CODE_SIGN_IDENTITY)" \
    PROVISIONING_PROFILE="$(APPLE_PROV_PROFILE_UUID)" \
    CFBundlePackageType=APPL \
    CFBundleVersion=$new_version
  displayName: 'Xcode build with specified destination'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'drop'

- script: |
    xcodebuild archive -workspace $(xcWorkspacePath) -scheme $(scheme) \
    -archivePath $(Build.SourcesDirectory)/build/WhiteLabel.xcarchive
  displayName: 'Archive Project'

- script: |
    rm -rf $(Build.ArtifactStagingDirectory)/*.ipa
    rm -rf $(Build.ArtifactStagingDirectory)/
    
    xcodebuild -exportArchive -archivePath $(Build.SourcesDirectory)/build/WhiteLabel.xcarchive \
    -exportOptionsPlist $(Build.SourcesDirectory)/ExportOptions.plist \
    -exportPath $(Build.ArtifactStagingDirectory)/
    
    if [ ! -f $(Build.ArtifactStagingDirectory)/$IPA_NAME ]; then
        echo "Error: IPA not found!"
        exit 1
    fi
  displayName: 'Archive, Export .ipa and Check Details'

- script: |
    retry_count=0
    max_retries=3
    while [ $retry_count -lt $max_retries ]
    do
      xcrun altool --upload-app --type ios --file $(Build.ArtifactStagingDirectory)/$IPA_NAME --username $(APPLE_DEVELOPER_USERNAME) --password $(APPLE_DEVELOPER_PASSWORD) && break
      retry_count=$((retry_count+1))
      echo "Retry $retry_count/$max_retries..."
      sleep 10
    done
    if [ $retry_count -eq $max_retries ]; then
      echo "Failed to upload after $max_retries attempts. Exiting..."
      exit 1
    fi
  displayName: 'Upload to App Store with Retry Mechanism'
