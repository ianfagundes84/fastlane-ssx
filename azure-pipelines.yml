trigger:
- develop

pool:
  vmImage: 'macOS-latest'

variables:
  scheme: 'WhiteLabel'
  xcWorkspacePath: '$(Build.SourcesDirectory)/WhiteLabel.xcworkspace'
  infoPlistPath: '$(Build.SourcesDirectory)/WhiteLabel/$(TARGET_NAME)/Info.plist'
  IPA_NAME: 'WhiteLabel.ipa'
  APP_VERSION: '14'
  targets:
    - whitelabel
    - whitelabelcopy

steps:
- checkout: self

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'CertificatesDistribution.p12'
    certPwd: '$(P12_PASSWORD)'
    keychain: 'temp'
  
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'DistributionWhiteLabel.mobileprovision'
  displayName: 'Install Apple Provisioning Profile'

- script: |
    cd $(Build.SourcesDirectory)
    pod update
    pod install
  displayName: 'CocoaPods install'

- script: |
    rm -rf ~/Library/Developer/Xcode/DerivedData/
    xcodebuild clean
  displayName: 'Clean Xcode data'

- ${{ each target in variables.targets }}:
  - script: |
      echo "Processing target: ${{ target }}"
      
      echo "---- Info.plist BEFORE any updates ----"
      cat $(infoPlistPath)

      infoPlistPath="$(Build.SourcesDirectory)/${{ target }}/Info.plist"
      chmod 644 $infoPlistPath
      /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $(BUNDLE_ID)" $infoPlistPath

      current_version=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" $infoPlistPath)
      new_version=$((APP_VERSION + 1))
      /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $new_version" $infoPlistPath
      
      xcodebuild archive -workspace $(xcWorkspacePath) -scheme ${{ target }} \
      -archivePath $(Build.SourcesDirectory)/build/${{ target }}.xcarchive
      
      rm -rf $(Build.ArtifactStagingDirectory)/*.ipa
      rm -rf $(Build.ArtifactStagingDirectory)/
      xcodebuild -exportArchive -archivePath $(Build.SourcesDirectory)/build/${{ target }}.xcarchive \
      -exportOptionsPlist $(Build.SourcesDirectory)/ExportOptions.plist \
      -exportPath $(Build.ArtifactStagingDirectory)/
      
      echo "---- Info.plist AFTER updates ----"
      cat $(infoPlistPath)
      
      if [ ! -f $(Build.ArtifactStagingDirectory)/$IPA_NAME ]; then
          echo "Error: IPA not found for target ${{ target }}!"
          exit 1
      fi
      
      mkdir tempIPA_${{ target }}
      unzip $(Build.ArtifactStagingDirectory)/$IPA_NAME -d tempIPA_${{ target }}/
      /usr/libexec/PlistBuddy -c "Print CFBundleVersion" tempIPA_${{ target }}/Payload/${{ target }}.app/Info.plist
    displayName: 'Process Target: ${{ target }}'

- script: |
    retry_count=0
    max_retries=3
    while [ $retry_count -lt $max_retries ]
    do
      xcrun altool --upload-app --type ios --file $(Build.ArtifactStagingDirectory)/$IPA_NAME --username $(APPLE_DEVELOPER_USERNAME) --password $(APPLE_DEVELOPER_PASSWORD) && break
      retry_count=$((retry_count+1))
      echo "Retry $retry_count/$max_retries..."
      sleep 10
    done
    if [ $retry_count -eq $max_retries ]; then
      echo "Failed to upload after $max_retries attempts. Exiting..."
      exit 1
    fi
  displayName: 'Upload to App Store with Retry Mechanism'