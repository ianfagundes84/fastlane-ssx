# This file contains the fastlane.tools configuration

#automation for CI part
require 'base64'
require 'tempfile'

fastlane_session_base64 = ENV["FASTLANE_SESSION_BASE64"]

if ENV["FASTLANE_SESSION_BASE64"].nil?
  puts "Error: FASTLANE_SESSION_BASE64 environment variable is not set."
else
  decoded_fastlane_session = Base64.decode64(ENV["FASTLANE_SESSION_BASE64"])
  temp_fastlane_session_file = Tempfile.new('fastlane_session')
  temp_fastlane_session_file.write(decoded_fastlane_session)
  temp_fastlane_session_file.rewind

  ENV["SPACESHIP_SESSION_FILE"] = temp_fastlane_session_file.path
end

#Fastfile scope
default_platform(:ios)

import("./extensions/Building.rb")
import("./extensions/Signing.rb")
import("./extensions/TestFlight.rb")

require_relative 'values/bundle_ids'

platform :ios do

  desc "Create a new app on App Store Connect"
  lane :create_new_app do
    create_app(ENV["APP_NAME"], ENV["APP_BUNDLE"], ENV["APP_TEAMNAME"])
  end

  desc "Create a new app on App Store Connect"
  def create_app(app_name, app_bundle, app_teamName)
    produce(
      username: "ianfag@icloud.com",
      app_identifier: app_bundle,
      app_name: app_name,
      language: "pt-BR",
      skip_itc: false,
      team_name: app_teamName
    )
  end

  desc "Authenticate with AppStoreConnect" 
  lane :auth_app_store_connect do 
    app_store_connect_api_key(
      key_filepath: "./fastlane-ssx/fastlane/AppStoreConnectAPIKey.json",
      duration: 1200, 
      in_house: false)
  end

  private_lane :ensure_app_specific_password_exists do
    unless ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"]
      UI.user_error!("No FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD environment variable found. Please set it up.")
    end
  end
end
